{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeScreen from \"./SafeScreen\";\nimport AppButton from \"../components/AppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport colors from \"../config/colors\";\nexport default function Login(_ref) {\n  var name = _ref.name,\n      navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputEmail = _useState4[0],\n      setInputEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputPassword = _useState6[0],\n      setInputPassword = _useState6[1];\n\n  var email = \"shamith2709@gmail.com\";\n  var password = \"sam\";\n\n  var handleSubmit = function handleSubmit() {\n    if (email == inputEmail && password == inputPassword) {\n      navigation.navigate(\"Main\");\n      setStatus(true);\n    } else {\n      setStatus(false);\n    }\n  };\n\n  return React.createElement(SafeScreen, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 24,\n      fontWeight: \"700\"\n    }\n  }, \"LOGIN\")), React.createElement(View, {\n    style: styles.logoContainer\n  }, React.createElement(Image, {\n    style: styles.Image,\n    source: require(\"../assets/logoWhite.png\")\n  })), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 18,\n      color: colors.lightGrey,\n      marginLeft: 12\n    }\n  }, Boolean(inputEmail != \"\") && \"Email\"), React.createElement(AppTextInput, {\n    fontSize: 18,\n    placeholder: \"Email\",\n    setText: setInputEmail\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 30,\n      color: \"white\",\n      fontSize: 18,\n      color: colors.lightGrey,\n      marginLeft: 12\n    }\n  }, Boolean(inputPassword != \"\") && \"Password\"), React.createElement(AppTextInput, {\n    secureTextEntry: true,\n    fontSize: 18,\n    placeholder: \"Password\",\n    setText: setInputPassword\n  })), !status && React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 20,\n      fontWeight: \"700\"\n    }\n  }, \"Try Again!\"), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(AppButton, {\n    title: \"Login\",\n    onPress: handleSubmit\n  })), React.createElement(Text, {\n    style: {\n      color: colors.lightGrey,\n      fontSize: 16\n    }\n  }, \"Don\\u2019t have an account?\", \" \", React.createElement(Text, {\n    style: {\n      color: colors.secondary,\n      fontSize: 16\n    },\n    onPress: function onPress() {\n      navigation.navigate(\"Signup\");\n    }\n  }, \"Signup\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"#7400b8\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  header: {\n    width: \"100%\",\n    paddingTop: 54,\n    paddingLeft: 43,\n    paddingBottom: 40,\n    display: \"flex\",\n    alignItems: \"flex-start\"\n  },\n  logoContainer: {},\n  Image: {\n    height: 80,\n    width: 120\n  },\n  inputContainer: {\n    marginVertical: 50\n  },\n  buttonContainer: {\n    width: \"100%\",\n    display: \"flex\",\n    marginBottom: 10,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["E:/vs practice/potato/potato/app/screens/Login.js"],"names":["React","useState","SafeScreen","AppButton","AppTextInput","colors","Login","name","navigation","status","setStatus","inputEmail","setInputEmail","inputPassword","setInputPassword","email","password","handleSubmit","navigate","styles","container","header","color","fontSize","fontWeight","logoContainer","Image","require","inputContainer","lightGrey","marginLeft","Boolean","marginTop","buttonContainer","secondary","StyleSheet","create","height","width","backgroundColor","display","flexDirection","alignItems","paddingTop","paddingLeft","paddingBottom","marginVertical","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport SafeScreen from \"./SafeScreen\";\r\nimport AppButton from \"../components/AppButton\";\r\nimport AppTextInput from \"../components/AppTextInput\";\r\nimport colors from \"../config/colors\";\r\nexport default function Login({ name, navigation }) {\r\n  const [status, setStatus] = useState(true)\r\n  const [inputEmail, setInputEmail] = useState(\"\");\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n  const email=\"shamith2709@gmail.com\";\r\n  const password=\"sam\";\r\n\r\n  const handleSubmit=()=>{\r\n    if(email==inputEmail&&password==inputPassword){\r\n      navigation.navigate(\"Main\")\r\n      setStatus(true);\r\n    }else{\r\n      setStatus(false);\r\n    }\r\n    // return false;\r\n  }\r\n  return (\r\n    <SafeScreen>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"700\" }}>\r\n            LOGIN\r\n          </Text>\r\n        </View>\r\n        <View style={styles.logoContainer}>\r\n          <Image\r\n            style={styles.Image}\r\n            source={require(\"../assets/logoWhite.png\")}\r\n          ></Image>\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <Text\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: 18,\r\n              color: colors.lightGrey,\r\n              marginLeft: 12,\r\n            }}\r\n          >\r\n            {Boolean(inputEmail != \"\") && \"Email\"}\r\n          </Text>\r\n          <AppTextInput\r\n            fontSize={18}\r\n            placeholder=\"Email\"\r\n            setText={setInputEmail}\r\n          ></AppTextInput>\r\n          <Text\r\n            style={{\r\n              marginTop:30,\r\n              // backgroundColor:\"red\",\r\n              color: \"white\",\r\n              fontSize: 18,\r\n              color: colors.lightGrey,\r\n              marginLeft: 12,\r\n            }}\r\n          >\r\n            {Boolean(inputPassword != \"\") && \"Password\"}\r\n          </Text>\r\n          <AppTextInput\r\n            secureTextEntry\r\n            fontSize={18}\r\n            placeholder=\"Password\"\r\n            setText={setInputPassword}\r\n          ></AppTextInput>\r\n        </View>\r\n        {!status&&<Text style={{ color: \"white\", fontSize: 20, fontWeight: \"700\" }}>\r\n            Try Again! \r\n          </Text>}\r\n        <View style={styles.buttonContainer}>\r\n          <AppButton title=\"Login\" onPress={handleSubmit}></AppButton>\r\n        </View>\r\n        <Text style={{ color: colors.lightGrey, fontSize: 16 }}>\r\n          Don’t have an account?{\" \"}\r\n          <Text\r\n            style={{ color: colors.secondary, fontSize: 16 }}\r\n            onPress={() => {navigation.navigate(\"Signup\")}}\r\n          >\r\n            Signup\r\n          </Text>\r\n        </Text>\r\n      </View>\r\n    </SafeScreen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#7400b8\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  header: {\r\n    width: \"100%\",\r\n    paddingTop: 54,\r\n    paddingLeft: 43,\r\n    paddingBottom: 40,\r\n    display: \"flex\",\r\n\r\n    // backgroundColor: \"red\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  logoContainer: {},\r\n  Image: {\r\n    height: 80,\r\n    width: 120,\r\n  },\r\n  inputContainer: {\r\n    marginVertical: 50,\r\n    // display: \"flex\",\r\n    // justifyContent: \"space-between\",\r\n  },\r\n  buttonContainer: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    marginBottom: 10,\r\n    //   justifyContent:\"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}