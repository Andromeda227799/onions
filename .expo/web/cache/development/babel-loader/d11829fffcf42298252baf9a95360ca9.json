{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport colors from \"../config/colors\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction ImageInput(_ref) {\n  var imageURI = _ref.imageURI,\n      onChangeImage = _ref.onChangeImage;\n\n  var reqPermission = function reqPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function reqPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n\n            if (!granted) {\n              console.log(\"camera access nahi diya bro user ne\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    reqPermission();\n  }, []);\n\n  var selectImage = function selectImage() {\n    var _await$ImagePicker$la, uri;\n\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (imageURI) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 4:\n            _await$ImagePicker$la = _context2.sent;\n            uri = _await$ImagePicker$la.uri;\n            onChangeImage(uri);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(\"error aaya bro image lene mai\", _context2.t0);\n\n          case 12:\n            _context2.next = 15;\n            break;\n\n          case 14:\n            Alert.alert(\"Alert\", \"Are you sure you want to delete this Image?\", [{\n              text: \"Delete\",\n              onPress: function onPress() {\n                return onChangeImage(null);\n              }\n            }, {\n              text: \"Nope\"\n            }]);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: selectImage\n  }, React.createElement(View, {\n    style: styles.container\n  }, console.log(imageURI), !imageURI && React.createElement(MaterialCommunityIcons, {\n    name: \"camera\",\n    size: 40\n  }), imageURI && React.createElement(Image, {\n    source: {\n      uri: imageURI\n    },\n    style: styles.image\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    height: 150,\n    width: 150,\n    borderRadius: 15,\n    overflow: \"hidden\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: colors.lightBlue\n  },\n  image: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n});\nexport default ImageInput;","map":{"version":3,"sources":["E:/vs practice/potato/potato/app/components/ImageInput.js"],"names":["React","useEffect","ImagePicker","colors","MaterialCommunityIcons","ImageInput","imageURI","onChangeImage","reqPermission","requestCameraPermissionsAsync","granted","console","log","selectImage","launchImageLibraryAsync","uri","Alert","alert","text","onPress","styles","container","image","StyleSheet","create","height","width","borderRadius","overflow","justifyContent","alignItems","backgroundColor","lightBlue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,sBAAT,QAAuC,oBAAvC;;AACA,SAASC,UAAT,OAAiD;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;;AAC/C,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMN,WAAW,CAACO,6BAAZ,EADN;;AAAA;AAAA;AACZC,YAAAA,OADY,yBACZA,OADY;;AAEpB,gBAAI,CAACA,OAAL,EAAc;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAOAX,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACbP,QADa;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAGQJ,WAAW,CAACY,uBAAZ,EAHR;;AAAA;AAAA;AAGNC,YAAAA,GAHM,yBAGNA,GAHM;AAKdR,YAAAA,aAAa,CAACQ,GAAD,CAAb;AALc;AAAA;;AAAA;AAAA;AAAA;AAOdJ,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AAPc;AAAA;AAAA;;AAAA;AAUhBI,YAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,6CAArB,EAAoE,CAClE;AAAEC,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAAA,uBAAMZ,aAAa,CAAC,IAAD,CAAnB;AAAA;AAA3B,aADkE,EAElE;AAAEW,cAAAA,IAAI,EAAE;AAAR,aAFkE,CAApE;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAiBA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEL;AAAnC,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC;AAApB,KACCV,OAAO,CAACC,GAAR,CAAYN,QAAZ,CADD,EAEG,CAACA,QAAD,IACC,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAE;AAFR,IAHJ,EAQGA,QAAQ,IACP,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAES,MAAAA,GAAG,EAAET;AAAP,KAAf;AAAkC,IAAA,KAAK,EAAEc,MAAM,CAACE;AAAhD,IATJ,CAFF,CADF;AAiBD;;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,QAAQ,EAAE,QAJD;AAKTC,IAAAA,cAAc,EAAE,QALP;AAMTC,IAAAA,UAAU,EAAE,QANH;AAOTC,IAAAA,eAAe,EAAE5B,MAAM,CAAC6B;AAPf,GADoB;AAU/BV,EAAAA,KAAK,EAAE;AACLG,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,KAAK,EAAE;AAFF;AAVwB,CAAlB,CAAf;AAgBA,eAAerB,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  Alert,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nfunction ImageInput({ imageURI, onChangeImage }) {\r\n  const reqPermission = async () => {\r\n    const { granted } = await ImagePicker.requestCameraPermissionsAsync();\r\n    if (!granted) {\r\n      console.log(\"camera access nahi diya bro user ne\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    reqPermission();\r\n  }, []);\r\n\r\n  const selectImage = async () => {\r\n    if (!imageURI) {\r\n      try {\r\n        const { uri } = await ImagePicker.launchImageLibraryAsync();\r\n        //console.log(uri);\r\n        onChangeImage(uri);\r\n      } catch (error) {\r\n        console.log(\"error aaya bro image lene mai\", error);\r\n      }\r\n    } else {\r\n      Alert.alert(\"Alert\", \"Are you sure you want to delete this Image?\", [\r\n        { text: \"Delete\", onPress: () => onChangeImage(null) },\r\n        { text: \"Nope\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={selectImage}>\r\n      \r\n      <View style={styles.container}>\r\n      {console.log(imageURI)}\r\n        {!imageURI && (\r\n          <MaterialCommunityIcons\r\n            name=\"camera\"\r\n            size={40}\r\n          ></MaterialCommunityIcons>\r\n        )}\r\n        {imageURI && (\r\n          <Image source={{ uri: imageURI }} style={styles.image}></Image>\r\n        )}\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 150,\r\n    width: 150,\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.lightBlue,\r\n  },\r\n  image: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}