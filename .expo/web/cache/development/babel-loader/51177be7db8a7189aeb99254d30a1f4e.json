{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport SafeScreen from \"./SafeScreen\";\nimport Swiper from \"react-native-deck-swiper\";\nimport colors from \"../config/colors\";\nimport { useState } from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nvar users = [{\n  id: 1,\n  image: require(\"../assets/user1.jpg\"),\n  name: \"user1\",\n  selling: \"plant\",\n  distance: 50\n}, {\n  id: 2,\n  image: require(\"../assets/user1.jpg\"),\n  name: \"user2\",\n  selling: \"plant\",\n  distance: 50\n}, {\n  id: 3,\n  image: require(\"../assets/user1.jpg\"),\n  name: \"user3\",\n  selling: \"plant\",\n  distance: 50\n}, {\n  id: 4,\n  image: require(\"../assets/user1.jpg\"),\n  name: \"user4\",\n  selling: \"plant\",\n  distance: 50\n}, {\n  id: 5,\n  image: require(\"../assets/user1.jpg\"),\n  name: \"user5\",\n  selling: \"plant\",\n  distance: 50\n}];\nvar swipeRef = React.createRef();\n\nvar Card = function Card(_ref) {\n  var card = _ref.card;\n  return React.createElement(View, {\n    style: styles.card\n  }, React.createElement(Image, {\n    source: card.image,\n    style: styles.cardImage\n  }), React.createElement(LinearGradient, {\n    colors: [\"transparent\", \"rgba(0,0,0,1)\"],\n    start: {\n      x: 0,\n      y: -0.1\n    },\n    style: styles.cardInfo\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 18,\n      fontFamily: \"Roboto\",\n      fontWeight: \"700\"\n    }\n  }, \"Name : \", card.name), React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 18,\n      fontFamily: \"Roboto\",\n      fontWeight: \"700\"\n    }\n  }, \"Selling : \", card.selling), React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 18,\n      fontFamily: \"Roboto\",\n      fontWeight: \"700\"\n    }\n  }, \"Distance : \", card.distance, \"m\")));\n};\n\nexport default function BuyingScreen() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var onSwiped = function onSwiped() {\n    setIndex((index + 1) % users.length);\n  };\n\n  return React.createElement(SafeScreen, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/logoDark.png\")\n  })), React.createElement(View, {\n    style: styles.content\n  }, React.createElement(Swiper, {\n    ref: swipeRef,\n    cards: users,\n    cardIndex: index,\n    renderCard: function renderCard(card) {\n      return React.createElement(Card, {\n        card: card\n      });\n    },\n    onSwiped: onSwiped,\n    stackSize: 3,\n    stackScale: 8,\n    stackSeparation: 20,\n    disableBottomSwipe: true,\n    disableTopSwipe: true,\n    animateOverlayLabelsOpacity: true,\n    animateCardOpacity: true,\n    backgroundColor: \"transparent\",\n    infinite: true,\n    overlayLabels: {\n      left: {\n        title: \"Nope\",\n        style: {\n          label: {\n            borderWidth: 5,\n            height: 46,\n            width: 72,\n            padding: 5,\n            paddingLeft: 8,\n            borderColor: \"red\",\n            color: \"red\",\n            fontSize: 24\n          },\n          wrapper: {\n            flexDirection: \"column\",\n            alignItems: \"flex-end\",\n            justifyContent: \"flex-start\",\n            marginTop: 20,\n            marginLeft: -20\n          }\n        }\n      },\n      right: {\n        title: \"Yess\",\n        style: {\n          label: {\n            borderWidth: 5,\n            height: 46,\n            width: 72,\n            padding: 5,\n            paddingLeft: 10,\n            borderColor: \"#04ff00\",\n            color: \"#04ff00\",\n            fontSize: 24\n          },\n          wrapper: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            marginTop: 20,\n            marginLeft: 20\n          }\n        }\n      }\n    }\n  })), React.createElement(View, {\n    style: styles.buttonsContainer\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return swipeRef.current.swipeLeft();\n    }\n  }, React.createElement(Image, {\n    style: styles.button,\n    source: require(\"../assets/Reject.png\")\n  })), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return swipeRef.current.swipeRight();\n    }\n  }, React.createElement(Image, {\n    style: styles.button,\n    source: require(\"../assets/Aceept.png\")\n  }))), React.createElement(View, {\n    style: styles.footer\n  })));\n}\nvar styles = StyleSheet.create({\n  header: {\n    display: \"flex\",\n    padding: 30,\n    paddingBottom: 10\n  },\n  container: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  logo: {\n    height: 37,\n    width: 54\n  },\n  content: {\n    flex: 0.8,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  footer: {\n    flex: 0.001,\n    height: 60\n  },\n  card: {\n    width: \"100%\",\n    height: \"62%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  cardImage: {\n    width: \"100%\",\n    height: 450,\n    borderRadius: 10,\n    resizeMode: \"contain\"\n  },\n  cardInfo: {\n    paddingTop: 70,\n    paddingBottom: 16,\n    position: \"absolute\",\n    width: 320,\n    marginLeft: 12,\n    alignSelf: \"baseline\",\n    borderRadius: 10,\n    padding: 29,\n    height: 200,\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    justifyContent: \"space-evenly\"\n  },\n  buttonsContainer: {\n    display: \"flex\",\n    marginTop: 25,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  button: {\n    marginHorizontal: 20,\n    marginTop: 70,\n    height: 80,\n    width: 80,\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["E:/vs practice/potato/potato/app/screens/BuyingScreen.js"],"names":["React","SafeScreen","Swiper","colors","useState","LinearGradient","users","id","image","require","name","selling","distance","swipeRef","createRef","Card","card","styles","cardImage","x","y","cardInfo","color","fontSize","fontFamily","fontWeight","BuyingScreen","index","setIndex","onSwiped","length","container","header","logo","content","left","title","style","label","borderWidth","height","width","padding","paddingLeft","borderColor","wrapper","flexDirection","alignItems","justifyContent","marginTop","marginLeft","right","buttonsContainer","current","swipeLeft","button","swipeRight","footer","StyleSheet","create","display","paddingBottom","flex","borderRadius","resizeMode","paddingTop","position","alignSelf","marginHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Animated,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport SafeScreen from \"./SafeScreen\";\r\nimport Swiper from \"react-native-deck-swiper\";\r\nimport colors from \"../config/colors\";\r\nimport { useState } from \"react\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nconst users = [\r\n  {\r\n    id: 1,\r\n    image: require(\"../assets/user1.jpg\"),\r\n    name: \"user1\",\r\n    selling: \"plant\",\r\n    distance: 50,\r\n  },\r\n  {\r\n    id: 2,\r\n    image: require(\"../assets/user1.jpg\"),\r\n    name: \"user2\",\r\n    selling: \"plant\",\r\n    distance: 50,\r\n  },\r\n  {\r\n    id: 3,\r\n    image: require(\"../assets/user1.jpg\"),\r\n    name: \"user3\",\r\n    selling: \"plant\",\r\n    distance: 50,\r\n  },\r\n  {\r\n    id: 4,\r\n    image: require(\"../assets/user1.jpg\"),\r\n    name: \"user4\",\r\n    selling: \"plant\",\r\n    distance: 50,\r\n  },\r\n  {\r\n    id: 5,\r\n    image: require(\"../assets/user1.jpg\"),\r\n    name: \"user5\",\r\n    selling: \"plant\",\r\n    distance: 50,\r\n  },\r\n];\r\n\r\nconst swipeRef = React.createRef();\r\n\r\nconst Card = ({ card }) => (\r\n  <View style={styles.card}>\r\n    <Image source={card.image} style={styles.cardImage}></Image>\r\n\r\n    <LinearGradient\r\n      // Button Linear Gradient\r\n      colors={[\"transparent\", \"rgba(0,0,0,1)\"]}\r\n      start={{ x: 0, y: -0.1 }}\r\n      style={styles.cardInfo}\r\n    >\r\n      <Text\r\n        style={{\r\n          color: \"white\",\r\n          fontSize: 18,\r\n          fontFamily: \"Roboto\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        Name : {card.name}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          color: \"white\",\r\n          fontSize: 18,\r\n          fontFamily: \"Roboto\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        Selling : {card.selling}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          color: \"white\",\r\n          fontSize: 18,\r\n          fontFamily: \"Roboto\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        Distance : {card.distance}m\r\n      </Text>\r\n    </LinearGradient>\r\n  </View>\r\n);\r\n\r\nexport default function BuyingScreen() {\r\n  const [index, setIndex] = useState(0);\r\n  const onSwiped = () => {\r\n    setIndex((index + 1) % users.length);\r\n  };\r\n\r\n  return (\r\n    <SafeScreen>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Image\r\n            style={styles.logo}\r\n            source={require(\"../assets/logoDark.png\")}\r\n          ></Image>\r\n        </View>\r\n        <View style={styles.content}>\r\n          <Swiper\r\n            ref={swipeRef}\r\n            cards={users}\r\n            cardIndex={index}\r\n            renderCard={(card) => <Card card={card} />}\r\n            onSwiped={onSwiped}\r\n            stackSize={3}\r\n            stackScale={8}\r\n            stackSeparation={20}\r\n            disableBottomSwipe\r\n            disableTopSwipe\r\n            animateOverlayLabelsOpacity\r\n            animateCardOpacity\r\n            backgroundColor={\"transparent\"}\r\n            infinite\r\n            overlayLabels={{\r\n              left: {\r\n                title: \"Nope\",\r\n                style: {\r\n                  label: {\r\n                    borderWidth: 5,\r\n                    height:46,\r\n                    width:72,\r\n                    padding:5,\r\n                    paddingLeft:8,\r\n                    borderColor: \"red\",\r\n                    color: \"red\",\r\n                    fontSize: 24,\r\n                  },\r\n                  wrapper: {\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"flex-end\",\r\n                    justifyContent: \"flex-start\",\r\n                    marginTop: 20,\r\n                    marginLeft: -20,\r\n                  },\r\n                },\r\n              },\r\n              right: {\r\n                title: \"Yess\",\r\n                style: {\r\n                  label: {\r\n                    borderWidth: 5,\r\n                    height:46,\r\n                    width:72,\r\n                    padding:5,\r\n                    paddingLeft:10,\r\n                    borderColor: \"#04ff00\",\r\n                    color: \"#04ff00\",\r\n                    fontSize: 24,\r\n                  },\r\n                  wrapper: {\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"flex-start\",\r\n                    justifyContent: \"flex-start\",\r\n                    marginTop: 20,\r\n                    marginLeft: 20,\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </View>\r\n        <View style={styles.buttonsContainer}>\r\n          <TouchableWithoutFeedback\r\n            onPress={() => swipeRef.current.swipeLeft()}\r\n          >\r\n            <Image\r\n              style={styles.button}\r\n              source={require(\"../assets/Reject.png\")}\r\n            ></Image>\r\n          </TouchableWithoutFeedback>\r\n          {/* <Image source={require(\"../assets/logoDark.png\")}></Image> */}\r\n          <TouchableWithoutFeedback\r\n            onPress={() => swipeRef.current.swipeRight()}\r\n          >\r\n            <Image\r\n              style={styles.button}\r\n              source={require(\"../assets/Aceept.png\")}\r\n            ></Image>\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n        <View style={styles.footer}></View>\r\n      </View>\r\n    </SafeScreen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    display: \"flex\",\r\n    padding: 30,\r\n    paddingBottom: 10,\r\n    // flex: 0.000001,\r\n    // backgroundColor:\"blue\"\r\n    // height: 0,\r\n    // marginBottom: 30,\r\n  },\r\n  container: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    //   backgroundColor:\"red\"\r\n  },\r\n  logo: {\r\n    height: 37,\r\n    width: 54,\r\n    \r\n  },\r\n  content: {\r\n    flex: 0.8,\r\n    // backgroundColor: \"red\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  footer: {\r\n    flex: 0.001,\r\n    height: 60,\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    height: \"62%\",\r\n    // backgroundColor: colors.white,\r\n    display: \"flex\",\r\n    // justifyContent:\"center\",\r\n    // alignItems: \"flex-end\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems:\"center\"\r\n  },\r\n  cardImage: {\r\n    width: \"100%\",\r\n    height: 450,\r\n    borderRadius: 10,\r\n    resizeMode: \"contain\",\r\n  },\r\n  cardInfo: {\r\n    paddingTop: 70,\r\n    paddingBottom: 16,\r\n    position: \"absolute\",\r\n    width: 320,\r\n    marginLeft:12,\r\n    alignSelf: \"baseline\",\r\n    borderRadius: 10,\r\n    padding: 29,\r\n    height: 200,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    justifyContent: \"space-evenly\",\r\n    //   backgroundImage:linearGradient(right, red , blue),\r\n    //   background-image: linear-gradient(direction, color-stop1, color-stop2, ...)\r\n  },\r\n  buttonsContainer: {\r\n    display: \"flex\",\r\n    marginTop:25,\r\n    flexDirection: \"row\",\r\n    //   justifyContent:\"space-evenly\",\r\n    justifyContent: \"center\",\r\n    // backgroundColor: \"red\",\r\n  },\r\n  button: {\r\n    marginHorizontal: 20,\r\n    marginTop:70,\r\n    height: 80,\r\n    width: 80,\r\n    resizeMode:\"contain\"\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}