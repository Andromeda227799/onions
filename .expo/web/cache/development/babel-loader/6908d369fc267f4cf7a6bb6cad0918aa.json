{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport FilterItem from \"../components/FilterItem\";\nimport MyListAddNew from \"../components/MyListAddNew\";\nimport SafeScreen from \"./SafeScreen\";\nimport Dialog from \"react-native-dialog\";\nimport colors from \"../config/colors\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppButton from \"../components/AppButton\";\nvar filters = [{\n  name: \"Potatoes\",\n  id: 1\n}, {\n  name: \"Potatoes\",\n  id: 2\n}, {\n  name: \"Potatoes\",\n  id: 3\n}, {\n  name: \"Potatoes\",\n  id: 4\n}];\nexport default function AccountScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var addFilter = function addFilter() {\n    setSelectedFilters([].concat(_toConsumableArray(selectedFilters), [{\n      id: selectedFilters.length + 1,\n      name: inputFilter\n    }]));\n    scrollView.current.scrollToEnd();\n  };\n\n  var handleCancel = function handleCancel() {\n    setVisible(false);\n  };\n\n  var handleDelete = function handleDelete() {\n    setVisible(false);\n  };\n\n  var scrollView = React.useRef();\n\n  var _React$useState3 = React.useState(filters),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedFilters = _React$useState4[0],\n      setSelectedFilters = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inputFilter = _React$useState6[0],\n      setinputFilter = _React$useState6[1];\n\n  return React.createElement(SafeScreen, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/logoDark.png\")\n  })), React.createElement(View, {\n    style: styles.imageNameContainer\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../assets/face1.jpg\")\n  }), React.createElement(Text, {\n    style: {\n      fontFamily: \"Roboto\",\n      fontSize: 20,\n      fontWeight: \"700\"\n    }\n  }, \"Shamith Rao\")), React.createElement(View, {\n    style: styles.filter\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Roboto\",\n      fontSize: 20,\n      fontWeight: \"700\",\n      marginBottom: 20,\n      marginTop: 5\n    }\n  }, \"Looking For :\"), React.createElement(FlatList, {\n    ref: scrollView,\n    data: selectedFilters,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(FilterItem, {\n        item: item,\n        onPress: function onPress() {\n          setSelectedFilters(selectedFilters.filter(function (item1) {\n            return item1.id != item.id;\n          }));\n        }\n      });\n    }\n  }), React.createElement(MyListAddNew, {\n    onPress: function onPress() {\n      return setVisible(true);\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(Text, {\n    style: {\n      color: colors.black,\n      fontSize: 18,\n      marginLeft: 12\n    }\n  }, \"Email\"), React.createElement(AppTextInput, {\n    fontSize: 18,\n    placeholder: \"shamith2709@gmail.com\",\n    setText: setinputFilter,\n    placeholderTextColor: colors.black\n  })), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(AppButton, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      navigation.navigate(\"Login\");\n    }\n  }))), React.createElement(Dialog.Container, {\n    visible: visible\n  }, React.createElement(Dialog.Title, null, \"Enter a New Filter\"), React.createElement(Dialog.Input, {\n    label: \"filter\",\n    onChangeText: function onChangeText(text) {\n      return setinputFilter(text);\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Add\",\n    onPress: function onPress() {\n      addFilter();\n      setVisible(false);\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Delete\",\n    onPress: handleDelete\n  })));\n}\nvar styles = StyleSheet.create({\n  header: {\n    display: \"flex\",\n    padding: 30,\n    paddingBottom: 0\n  },\n  image: {\n    height: 100,\n    width: 100,\n    borderRadius: 60,\n    marginBottom: 20\n  },\n  container: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  logo: {\n    height: 37,\n    width: 54\n  },\n  imageNameContainer: {\n    alignItems: \"center\",\n    padding: 20\n  },\n  filter: {\n    paddingLeft: 30\n  },\n  inputContainer: {\n    padding: 30\n  },\n  buttonContainer: {\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["E:/vs practice/potato/potato/app/screens/AccountScreen.js"],"names":["React","FlatList","FilterItem","MyListAddNew","SafeScreen","Dialog","colors","AppTextInput","AppButton","filters","name","id","AccountScreen","navigation","useState","visible","setVisible","addFilter","setSelectedFilters","selectedFilters","length","inputFilter","scrollView","current","scrollToEnd","handleCancel","handleDelete","useRef","setinputFilter","styles","container","header","logo","require","imageNameContainer","image","fontFamily","fontSize","fontWeight","filter","marginBottom","marginTop","item","toString","item1","inputContainer","color","black","marginLeft","buttonContainer","navigate","text","StyleSheet","create","display","padding","paddingBottom","height","width","borderRadius","alignItems","paddingLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, Image } from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport FilterItem from \"../components/FilterItem\";\r\nimport MyListAddNew from \"../components/MyListAddNew\";\r\nimport SafeScreen from \"./SafeScreen\";\r\nimport Dialog from \"react-native-dialog\";\r\nimport colors from \"../config/colors\";\r\nimport AppTextInput from \"../components/AppTextInput\";\r\nimport AppButton from \"../components/AppButton\";\r\n\r\nconst filters = [\r\n  {\r\n    name: \"Potatoes\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Potatoes\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"Potatoes\",\r\n    id: 3,\r\n  },\r\n  {\r\n    name: \"Potatoes\",\r\n    id: 4,\r\n  },\r\n];\r\n\r\nexport default function AccountScreen({navigation}) {\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  const addFilter = () => {\r\n    setSelectedFilters([\r\n      ...selectedFilters,\r\n      {\r\n        id: selectedFilters.length + 1,\r\n        name: inputFilter,\r\n      },\r\n    ]);\r\n    scrollView.current.scrollToEnd();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    // The user has pressed the \"Delete\" button, so here you can do your own logic.\r\n    // ...Your logic\r\n    setVisible(false);\r\n  };\r\n\r\n  const scrollView = React.useRef();\r\n  const [selectedFilters, setSelectedFilters] = React.useState(filters);\r\n  const [inputFilter, setinputFilter] = React.useState(\"\");\r\n  return (\r\n    <SafeScreen>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Image\r\n            style={styles.logo}\r\n            source={require(\"../assets/logoDark.png\")}\r\n          ></Image>\r\n        </View>\r\n        <View style={styles.imageNameContainer}>\r\n          <Image\r\n            style={styles.image}\r\n            source={require(\"../assets/face1.jpg\")}\r\n          ></Image>\r\n          <Text\r\n            style={{ fontFamily: \"Roboto\", fontSize: 20, fontWeight: \"700\" }}\r\n          >\r\n            Shamith Rao\r\n          </Text>\r\n        </View>\r\n        <View style={styles.filter}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Roboto\",\r\n              fontSize: 20,\r\n              fontWeight: \"700\",\r\n              marginBottom: 20,\r\n              marginTop: 5,\r\n            }}\r\n          >\r\n            Looking For :\r\n          </Text>\r\n          <FlatList\r\n            ref={scrollView}\r\n            data={selectedFilters}\r\n            horizontal\r\n            showsHorizontalScrollIndicator={false}\r\n            keyExtractor={(item) => item.id.toString()}\r\n            renderItem={({ item }) => (\r\n              <FilterItem\r\n                item={item}\r\n                onPress={() => {\r\n                  setSelectedFilters(\r\n                    selectedFilters.filter((item1) => item1.id != item.id)\r\n                  );\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <MyListAddNew onPress={()=>setVisible(true)}/>\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <Text\r\n            style={{\r\n              color: colors.black,\r\n              fontSize: 18,\r\n              marginLeft: 12,\r\n            }}\r\n          >\r\n            {\"Email\"}\r\n          </Text>\r\n          <AppTextInput\r\n            fontSize={18}\r\n            placeholder=\"shamith2709@gmail.com\"\r\n            setText={setinputFilter}\r\n            placeholderTextColor={colors.black}\r\n          ></AppTextInput>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <AppButton title=\"Logout\" onPress={()=>{navigation.navigate(\"Login\")}}/>\r\n      </View>\r\n      </View>\r\n      \r\n\r\n      <Dialog.Container visible={visible}>\r\n        <Dialog.Title>Enter a New Filter</Dialog.Title>\r\n        <Dialog.Input\r\n          label=\"filter\"\r\n          onChangeText={(text) => setinputFilter(text)}\r\n        ></Dialog.Input>\r\n        <Dialog.Button label=\"Add\" onPress={()=>{\r\n            addFilter();\r\n            setVisible(false)} }/>\r\n        <Dialog.Button label=\"Delete\" onPress={handleDelete} />\r\n      </Dialog.Container>\r\n    </SafeScreen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    display: \"flex\",\r\n    padding: 30,\r\n    paddingBottom: 0,\r\n    // flex: 0.000001,\r\n    // backgroundColor:\"blue\"\r\n    // height: 0,\r\n    // marginBottom: 30,\r\n  },\r\n  image: {\r\n    height: 100,\r\n    width: 100,\r\n    borderRadius: 60,\r\n    marginBottom: 20,\r\n  },\r\n  container: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    //   backgroundColor:\"red\"\r\n  },\r\n  logo: {\r\n    height: 37,\r\n    width: 54,\r\n  },\r\n  imageNameContainer: {\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  filter: {\r\n    paddingLeft: 30,\r\n  },\r\n  inputContainer:{\r\n      padding:30\r\n  },\r\n  buttonContainer:{alignItems:\"center\"},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}