{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { MaterialCommunityIcons, Feather, MaterialIcons } from \"@expo/vector-icons\";\nimport colors from \"../config/colors\";\nimport BuyingScreen from \"../screens/BuyingScreen\";\nimport SellingScreen from \"../screens/SellingScreen\";\nimport ListingEditScreen from \"../screens/ListingEditScreen\";\nimport CustomPotatoIcon from \"../components/CustomPotatoIcon\";\nimport MessegesScreen from \"../screens/MessegesScreen\";\nimport AccountScreen from \"../screens/AccountScreen\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar StackNavigator = function StackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SellingScreen\",\n    component: SellingScreen\n  }), React.createElement(Stack.Screen, {\n    name: \"AddNewSell\",\n    component: ListingEditScreen\n  }));\n};\n\nvar TabNavigator = function TabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: {\n      tabBarStyle: [{\n        position: \"absolute\",\n        bottom: 10,\n        left: 12,\n        right: 12,\n        elevation: 0,\n        backgroundColor: colors.white,\n        borderRadius: 15,\n        height: 65,\n        display: \"flex\",\n        flexDirection: \"row\",\n        paddingBottom: 10,\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowColor: colors.black,\n        elevation: 3\n      }]\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: AccountScreen,\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref) {\n        var size = _ref.size,\n            color = _ref.color;\n        return React.createElement(React.Fragment, null, console.log(color), React.createElement(Feather, {\n          name: \"user\",\n          size: 24,\n          color: color\n        }));\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Buy\",\n    component: BuyingScreen,\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var size = _ref2.size,\n            color = _ref2.color;\n        return React.createElement(View, null, React.createElement(CustomPotatoIcon, {\n          color: color\n        }));\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Sell\",\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var size = _ref3.size,\n            color = _ref3.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"tag-outline\",\n          size: 24,\n          color: color\n        });\n      }\n    },\n    component: StackNavigator\n  }), React.createElement(Tab.Screen, {\n    name: \"Chat\",\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var size = _ref4.size,\n            color = _ref4.color;\n        return React.createElement(MaterialIcons, {\n          name: \"chat-bubble-outline\",\n          size: 24,\n          color: color\n        });\n      }\n    },\n    component: MessegesScreen\n  }));\n};\n\nexport default TabNavigator;\nvar styles = StyleSheet.create({\n  iconContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.primary,\n    height: 50,\n    width: 50,\n    borderRadius: 25\n  }\n});","map":{"version":3,"sources":["E:/vs practice/potato/potato/app/navigation/TabNavigator.js"],"names":["React","createBottomTabNavigator","createStackNavigator","MaterialCommunityIcons","Feather","MaterialIcons","colors","BuyingScreen","SellingScreen","ListingEditScreen","CustomPotatoIcon","MessegesScreen","AccountScreen","Tab","Stack","StackNavigator","headerShown","TabNavigator","tabBarStyle","position","bottom","left","right","elevation","backgroundColor","white","borderRadius","height","display","flexDirection","paddingBottom","shadowOffset","width","shadowColor","black","tabBarIcon","size","color","console","log","styles","StyleSheet","create","iconContainer","alignItems","justifyContent","primary"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n// import MyAccountScreen from \"../screens/MyAccountScreen\";\r\n\r\nimport { MaterialCommunityIcons, Feather ,MaterialIcons} from \"@expo/vector-icons\";\r\nimport colors from \"../config/colors\";\r\nimport BuyingScreen from \"../screens/BuyingScreen\";\r\nimport SellingScreen from \"../screens/SellingScreen\";\r\nimport ListingEditScreen from \"../screens/ListingEditScreen\";\r\nimport CustomPotatoIcon from \"../components/CustomPotatoIcon\";\r\nimport MessegesScreen from \"../screens/MessegesScreen\";\r\nimport AccountScreen from \"../screens/AccountScreen\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\nconst StackNavigator = () => (\r\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n    \r\n    <Stack.Screen\r\n      name=\"SellingScreen\"\r\n      component={SellingScreen}\r\n    ></Stack.Screen>\r\n    <Stack.Screen name=\"AddNewSell\" component={ListingEditScreen}></Stack.Screen>\r\n  </Stack.Navigator>\r\n);\r\n\r\nconst TabNavigator = () => (\r\n  <Tab.Navigator\r\n    screenOptions={{\r\n      tabBarStyle: [\r\n        {\r\n          position: \"absolute\",\r\n          bottom: 10,\r\n          left: 12,\r\n          right: 12,\r\n          elevation: 0,\r\n          backgroundColor: colors.white,\r\n          borderRadius: 15,\r\n          height: 65,\r\n          display:\"flex\",\r\n          flexDirection:\"row\",\r\n          paddingBottom:10,\r\n          shadowOffset:{width:0,height:2},\r\n          shadowColor:colors.black,\r\n          elevation:3,\r\n          \r\n          // alignItems:\"center\"\r\n        },\r\n      ],\r\n    }}\r\n  >\r\n    <Tab.Screen\r\n      name=\"Account\"\r\n      component={AccountScreen}\r\n      options={{\r\n        headerShown: false,\r\n        tabBarIcon: ({ size, color }) => (\r\n          <>\r\n            {console.log(color)}\r\n            <Feather name=\"user\" size={24} color={color} />\r\n          </>\r\n        ),\r\n      }}\r\n    ></Tab.Screen>\r\n    {/* <Tab.Screen name=\"welcome\" component={ListingsScreen}></Tab.Screen> */}\r\n    <Tab.Screen\r\n      name=\"Buy\"\r\n      component={BuyingScreen}\r\n      options={{\r\n        headerShown: false,\r\n        tabBarIcon: ({ size, color }) => (\r\n          <View>\r\n            <CustomPotatoIcon color={color}></CustomPotatoIcon>\r\n          </View>\r\n        ),\r\n      }}\r\n    ></Tab.Screen>\r\n    <Tab.Screen\r\n      name=\"Sell\"\r\n      options={{\r\n        headerShown: false,\r\n        tabBarIcon: ({ size, color }) => (\r\n          <MaterialCommunityIcons name=\"tag-outline\" size={24} color={color} />\r\n        ),\r\n      }}\r\n      component={StackNavigator}\r\n    ></Tab.Screen>\r\n    <Tab.Screen\r\n      name=\"Chat\"\r\n      options={{\r\n        headerShown: false,\r\n        tabBarIcon: ({ size, color }) => (\r\n          <MaterialIcons name=\"chat-bubble-outline\" size={24} color={color} />\r\n        ),\r\n      }}\r\n      component={MessegesScreen}\r\n    ></Tab.Screen>\r\n  </Tab.Navigator>\r\n);\r\n\r\nexport default TabNavigator;\r\n\r\nconst styles = StyleSheet.create({\r\n  iconContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.primary,\r\n    height: 50,\r\n    width: 50,\r\n    borderRadius: 25,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}